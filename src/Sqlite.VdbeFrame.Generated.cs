// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static void sqlite3VdbeFrameDelete(VdbeFrame p)
		{
			int i = 0;
			sqlite3_value aMem = ((sqlite3_value)(&((byte*)(p))[(((sizeof(VdbeFrame)) + 7) & ~7)]));
			VdbeCursor apCsr = (VdbeCursor)(aMem[p.nChildMem]);
			for (i = (int)(0); (i) < (p.nChildCsr); i++)
			{
				sqlite3VdbeFreeCursor(p.v, apCsr[i]);
			}

			releaseMemArray(aMem, (int)(p.nChildMem));
			sqlite3VdbeDeleteAuxData(p.v.db, p.pAuxData, (int)(-1), (int)(0));
			sqlite3DbFree(p.v.db, p);
		}
		public static int sqlite3VdbeFrameRestore(VdbeFrame pFrame)
		{
			Vdbe v = pFrame.v;
			closeCursorsInFrame(v);
			v.aOp = pFrame.aOp;
			v.nOp = (int)(pFrame.nOp);
			v.aMem = pFrame.aMem;
			v.nMem = (int)(pFrame.nMem);
			v.apCsr = pFrame.apCsr;
			v.nCursor = (int)(pFrame.nCursor);
			v.db.lastRowid = (long)(pFrame.lastRowid);
			v.nChange = (long)(pFrame.nChange);
			v.db.nChange = (long)(pFrame.nDbChange);
			sqlite3VdbeDeleteAuxData(v.db, v.pAuxData, (int)(-1), (int)(0));
			v.pAuxData = pFrame.pAuxData;
			pFrame.pAuxData = null;
			return (int)(pFrame.pc);
		}
	}
}