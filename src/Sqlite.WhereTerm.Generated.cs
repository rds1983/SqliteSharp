// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static int isLimitTerm(WhereTerm pTerm)
		{
			return (((pTerm.eMatchOp) >= (73)) && ((pTerm.eMatchOp) <= (74)) ? 1 : 0);
		}
		public static int termCanDriveIndex(WhereTerm pTerm, SrcItem pSrc, ulong notReady)
		{
			sbyte aff = 0;
			if (pTerm.leftCursor != pSrc.iCursor)
				return (int)(0);
			if ((pTerm.eOperator & (0x0002 | 0x0080)) == (0))
				return (int)(0);
			if ((((pSrc.fg.jointype & 0x0008) != 0) && (!(((pTerm.pExpr).flags & (0x000001)) != 0))) && ((pTerm.eOperator & 0x0080) != 0))
			{
				return (int)(0);
			}

			if ((pTerm.prereqRight & notReady) != 0)
				return (int)(0);
			if ((pTerm.u.x.leftColumn) < (0))
				return (int)(0);
			aff = (sbyte)(pSrc.pTab.aCol[pTerm.u.x.leftColumn].affinity);
			if (sqlite3IndexAffinityOk(pTerm.pExpr, (sbyte)(aff)) == 0)
				return (int)(0);
			return (int)(1);
		}
		public static WhereTerm whereNthSubterm(WhereTerm pTerm, int N)
		{
			if (pTerm.eOperator != 0x0400)
			{
				return (N) == (0) ? pTerm : null;
			}

			if ((N) < (pTerm.u.pAndInfo.wc.nTerm))
			{
				return pTerm.u.pAndInfo.wc.a[N];
			}

			return null;
		}
		public static short whereRangeAdjust(WhereTerm pTerm, short nNew)
		{
			short nRet = (short)(nNew);
			if ((pTerm) != null)
			{
				if ((pTerm.truthProb) <= (0))
				{
					nRet += (short)(pTerm.truthProb);
				}
				else if ((pTerm.wtFlags & 0x0080) == (0))
				{
					nRet -= (short)(20);
				}
			}

			return (short)(nRet);
		}
	}
}