// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static int memjrnlCreateFile(MemJournal p)
		{
			int rc = 0;
			sqlite3_file pReal = (sqlite3_file)(p);
			MemJournal copy = (MemJournal)(p);
			CRuntime.memset(p, (int)(0), (ulong)(sizeof(MemJournal)));
			rc = (int)(sqlite3OsOpen(copy.pVfs, copy.zJournal, pReal, (int)(copy.flags), null));
			if ((rc) == (0))
			{
				int nChunk = (int)(copy.nChunkSize);
				long iOff = (long)(0);
				FileChunk* pIter;
				for (pIter = copy.pFirst; pIter; pIter = pIter->pNext)
				{
					if ((iOff + nChunk) > (copy.endpoint.iOffset))
					{
						nChunk = (int)(copy.endpoint.iOffset - iOff);
					}

					rc = (int)(sqlite3OsWrite(pReal, pIter->zChunk, (int)(nChunk), (long)(iOff)));
					if ((rc) != 0)
						break;
					iOff += (long)(nChunk);
				}

				if ((rc) == (0))
				{
					memjrnlFreeChunks(copy.pFirst);
				}
			}

			if (rc != 0)
			{
				sqlite3OsClose(pReal);
				p = (MemJournal)(copy);
			}

			return (int)(rc);
		}
	}
}