// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static int walWriteOneFrame(WalWriter p, PgHdr pPage, int nTruncate, long iOffset)
		{
			int rc = 0;
			void* pData;
			byte* aFrame = stackalloc byte[24];
			pData = pPage.pData;
			walEncodeFrame(p.pWal, (uint)(pPage.pgno), (uint)(nTruncate), pData, aFrame);
			rc = (int)(walWriteToLog(p, aFrame, (int)(24 * sizeof(byte)), (long)(iOffset)));
			if ((rc) != 0)
				return (int)(rc);
			rc = (int)(walWriteToLog(p, pData, (int)(p.szPage), (long)(iOffset + 24 * sizeof(byte))));
			return (int)(rc);
		}
		public static int walWriteToLog(WalWriter p, void* pContent, int iAmt, long iOffset)
		{
			int rc = 0;
			if (((iOffset) < (p.iSyncPoint)) && ((iOffset + iAmt) >= (p.iSyncPoint)))
			{
				int iFirstAmt = (int)(p.iSyncPoint - iOffset);
				rc = (int)(sqlite3OsWrite(p.pFd, pContent, (int)(iFirstAmt), (long)(iOffset)));
				if ((rc) != 0)
					return (int)(rc);
				iOffset += (long)(iFirstAmt);
				iAmt -= (int)(iFirstAmt);
				pContent = (void*)(iFirstAmt + (sbyte*)(pContent));
				rc = (int)(sqlite3OsSync(p.pFd, (int)((p.syncFlags) & 0x03)));
				if (((iAmt) == (0)) || ((rc) != 0))
					return (int)(rc);
			}

			rc = (int)(sqlite3OsWrite(p.pFd, pContent, (int)(iAmt), (long)(iOffset)));
			return (int)(rc);
		}
	}
}