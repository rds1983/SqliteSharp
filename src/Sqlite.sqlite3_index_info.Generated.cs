// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static int sqlite3_vtab_distinct(sqlite3_index_info* pIdxInfo)
		{
			HiddenIndexInfo pHidden = (HiddenIndexInfo)(&pIdxInfo[1]);
			return (int)(pHidden.eDistinct);
		}
		public static int sqlite3_vtab_in(sqlite3_index_info* pIdxInfo, int iCons, int bHandle)
		{
			HiddenIndexInfo pHidden = (HiddenIndexInfo)(&pIdxInfo[1]);
			uint m = (uint)((iCons) <= (31) ? ((uint)(1)) << (iCons) : 0);
			if ((m & pHidden.mIn) != 0)
			{
				if ((bHandle) == (0))
				{
					pHidden.mHandleIn &= (uint)(~m);
				}
				else if ((bHandle) > (0))
				{
					pHidden.mHandleIn |= (uint)(m);
				}

				return (int)(1);
			}

			return (int)(0);
		}
		public static int sqlite3_vtab_rhs_value(sqlite3_index_info* pIdxInfo, int iCons, sqlite3_value ppVal)
		{
			HiddenIndexInfo pH = (HiddenIndexInfo)(&pIdxInfo[1]);
			sqlite3_value pVal = null;
			int rc = (int)(0);
			if (((iCons) < (0)) || ((iCons) >= (pIdxInfo->nConstraint)))
			{
				rc = (int)(21);
			}
			else
			{
				if ((pH.aRhs[iCons]) == (null))
				{
					WhereTerm pTerm = pH.pWC.a[pIdxInfo->aConstraint[iCons].iTermOffset];
					rc = (int)(sqlite3ValueFromExpr(pH.pParse.db, pTerm.pExpr.pRight, (byte)((pH.pParse.db).enc), (byte)(0x41), pH.aRhs[iCons]));
				}

				pVal = pH.aRhs[iCons];
			}

			ppVal = pVal;
			if (((rc) == (0)) && ((pVal) == (null)))
			{
				rc = (int)(12);
			}

			return (int)(rc);
		}
	}
}