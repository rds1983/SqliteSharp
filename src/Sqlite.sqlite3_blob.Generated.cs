// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static int blobReadWrite(sqlite3_blob* pBlob, void* z, int n, int iOffset, delegate174 xCall)
		{
			int rc = 0;
			Incrblob p = (Incrblob)(pBlob);
			Vdbe v;
			sqlite3 db;
			if ((p) == (null))
				return (int)(sqlite3MisuseError((int)(96397)));
			db = p.db;
			sqlite3_mutex_enter(db.mutex);
			v = (Vdbe)(p.pStmt);
			if ((((n) < (0)) || ((iOffset) < (0))) || (((long)(iOffset) + n) > (p.nByte)))
			{
				rc = (int)(1);
			}
			else if ((v) == (null))
			{
				rc = (int)(4);
			}
			else
			{
				sqlite3BtreeEnterCursor(p.pCsr);
				rc = (int)(xCall(p.pCsr, (uint)(iOffset + p.iOffset), (uint)(n), z));
				sqlite3BtreeLeaveCursor(p.pCsr);
				if ((rc) == (4))
				{
					sqlite3VdbeFinalize(v);
					p.pStmt = null;
				}
				else
				{
					v.rc = (int)(rc);
				}
			}

			sqlite3Error(db, (int)(rc));
			rc = (int)(sqlite3ApiExit(db, (int)(rc)));
			sqlite3_mutex_leave(db.mutex);
			return (int)(rc);
		}
		public static int sqlite3_blob_bytes(sqlite3_blob* pBlob)
		{
			Incrblob p = (Incrblob)(pBlob);
			return (int)((((p) != null) && ((p.pStmt) != null)) ? p.nByte : 0);
		}
		public static int sqlite3_blob_close(sqlite3_blob* pBlob)
		{
			Incrblob p = (Incrblob)(pBlob);
			int rc = 0;
			sqlite3 db;
			if ((p) != null)
			{
				sqlite3_stmt* pStmt = p.pStmt;
				db = p.db;
				sqlite3_mutex_enter(db.mutex);
				sqlite3DbFree(db, p);
				sqlite3_mutex_leave(db.mutex);
				rc = (int)(sqlite3_finalize(pStmt));
			}
			else
			{
				rc = (int)(0);
			}

			return (int)(rc);
		}
		public static int sqlite3_blob_read(sqlite3_blob* pBlob, void* z, int n, int iOffset)
		{
			return (int)(blobReadWrite(pBlob, z, (int)(n), (int)(iOffset), sqlite3BtreePayloadChecked));
		}
		public static int sqlite3_blob_reopen(sqlite3_blob* pBlob, long iRow)
		{
			int rc = 0;
			Incrblob p = (Incrblob)(pBlob);
			sqlite3 db;
			if ((p) == (null))
				return (int)(sqlite3MisuseError((int)(96497)));
			db = p.db;
			sqlite3_mutex_enter(db.mutex);
			if ((p.pStmt) == (null))
			{
				rc = (int)(4);
			}
			else
			{
				sbyte* zErr;
				((Vdbe)(p.pStmt)).rc = (int)(0);
				rc = (int)(blobSeekToRow(p, (long)(iRow), &zErr));
				if (rc != 0)
				{
					sqlite3ErrorWithMsg(db, (int)(rc), ((zErr) != 0 ? "%s" : null), zErr);
					sqlite3DbFree(db, zErr);
				}
			}

			rc = (int)(sqlite3ApiExit(db, (int)(rc)));
			sqlite3_mutex_leave(db.mutex);
			return (int)(rc);
		}
		public static int sqlite3_blob_write(sqlite3_blob* pBlob, void* z, int n, int iOffset)
		{
			return (int)(blobReadWrite(pBlob, z, (int)(n), (int)(iOffset), sqlite3BtreePutData));
		}
	}
}