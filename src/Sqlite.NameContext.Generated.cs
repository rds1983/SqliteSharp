// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static int resolveAttachExpr(NameContext pName, Expr pExpr)
		{
			int rc = (int)(0);
			if ((pExpr) != null)
			{
				if (pExpr.op != 59)
				{
					rc = (int)(sqlite3ResolveExprNames(pName, pExpr));
				}
				else
				{
					pExpr.op = (byte)(117);
				}
			}

			return (int)(rc);
		}
		public static int resolveOrderGroupBy(NameContext pNC, Select pSelect, ExprList pOrderBy, sbyte* zType)
		{
			int i = 0; int j = 0;
			int iCol = 0;
			ExprList_item* pItem;
			Parse pParse;
			int nResult = 0;
			nResult = (int)(pSelect.pEList.nExpr);
			pParse = pNC.pParse;
			for (i = (int)(0), pItem = pOrderBy.a; (i) < (pOrderBy.nExpr); i++, pItem++)
			{
				Expr pE = pItem->pExpr;
				Expr pE2 = sqlite3ExprSkipCollateAndLikely(pE);
				if (((pE2) == (null)))
					continue;
				if (zType[0] != 71)
				{
					iCol = (int)(resolveAsName(pParse, pSelect.pEList, pE2));
					if ((iCol) > (0))
					{
						pItem->u.x.iOrderByCol = ((ushort)(iCol));
						continue;
					}
				}

				if ((sqlite3ExprIsInteger(pE2, &iCol)) != 0)
				{
					if (((iCol) < (1)) || ((iCol) > (0xffff)))
					{
						resolveOutOfRangeError(pParse, zType, (int)(i + 1), (int)(nResult), pE2);
						return (int)(1);
					}

					pItem->u.x.iOrderByCol = ((ushort)(iCol));
					continue;
				}

				pItem->u.x.iOrderByCol = (ushort)(0);
				if ((sqlite3ResolveExprNames(pNC, pE)) != 0)
				{
					return (int)(1);
				}

				for (j = (int)(0); (j) < (pSelect.pEList.nExpr); j++)
				{
					if ((sqlite3ExprCompare(null, pE, pSelect.pEList.a[j].pExpr, (int)(-1))) == (0))
					{
						windowRemoveExprFromSelect(pSelect, pE);
						pItem->u.x.iOrderByCol = (ushort)(j + 1);
					}
				}
			}

			return (int)(sqlite3ResolveOrderGroupBy(pParse, pSelect, pOrderBy, zType));
		}
		public static void sqlite3ExprAnalyzeAggList(NameContext pNC, ExprList pList)
		{
			ExprList_item* pItem;
			int i = 0;
			if ((pList) != null)
			{
				for (pItem = pList.a, i = (int)(0); (i) < (pList.nExpr); i++, pItem++)
				{
					sqlite3ExprAnalyzeAggregates(pNC, pItem->pExpr);
				}
			}
		}
		public static void sqlite3ExprAnalyzeAggregates(NameContext pNC, Expr pExpr)
		{
			Walker w = new Walker();
			w.xExprCallback = analyzeAggregate;
			w.xSelectCallback = sqlite3WalkerDepthIncrease;
			w.xSelectCallback2 = sqlite3WalkerDepthDecrease;
			w.walkerDepth = (int)(0);
			w.u.pNC = pNC;
			w.pParse = null;
			sqlite3WalkExpr(w, pExpr);
		}
		public static int sqlite3ResolveExprListNames(NameContext pNC, ExprList pList)
		{
			int i = 0;
			int savedHasAgg = (int)(0);
			Walker w = new Walker();
			if ((pList) == (null))
				return (int)(0);
			w.pParse = pNC.pParse;
			w.xExprCallback = resolveExprStep;
			w.xSelectCallback = resolveSelectStep;
			w.xSelectCallback2 = null;
			w.u.pNC = pNC;
			savedHasAgg = (int)(pNC.ncFlags & (0x000010 | 0x001000 | 0x008000 | 0x8000000));
			pNC.ncFlags &= (int)(~(0x000010 | 0x001000 | 0x008000 | 0x8000000));
			for (i = (int)(0); (i) < (pList.nExpr); i++)
			{
				Expr pExpr = pList.a[i].pExpr;
				if ((pExpr) == (null))
					continue;
				w.pParse.nHeight += (int)(pExpr.nHeight);
				if ((sqlite3ExprCheckHeight(w.pParse, (int)(w.pParse.nHeight))) != 0)
				{
					return (int)(2);
				}

				sqlite3WalkExpr(w, pExpr);
				w.pParse.nHeight -= (int)(pExpr.nHeight);
				if ((pNC.ncFlags & (0x000010 | 0x001000 | 0x008000 | 0x8000000)) != 0)
				{
					(pExpr).flags |= (uint)(pNC.ncFlags & (0x000010 | 0x008000));
					savedHasAgg |= (int)(pNC.ncFlags & (0x000010 | 0x001000 | 0x008000 | 0x8000000));
					pNC.ncFlags &= (int)(~(0x000010 | 0x001000 | 0x008000 | 0x8000000));
				}

				if ((w.pParse.nErr) > (0))
					return (int)(2);
			}

			pNC.ncFlags |= (int)(savedHasAgg);
			return (int)(0);
		}
		public static int sqlite3ResolveExprNames(NameContext pNC, Expr pExpr)
		{
			int savedHasAgg = 0;
			Walker w = new Walker();
			if ((pExpr) == (null))
				return (int)(0);
			savedHasAgg = (int)(pNC.ncFlags & (0x000010 | 0x001000 | 0x008000 | 0x8000000));
			pNC.ncFlags &= (int)(~(0x000010 | 0x001000 | 0x008000 | 0x8000000));
			w.pParse = pNC.pParse;
			w.xExprCallback = resolveExprStep;
			w.xSelectCallback = (pNC.ncFlags & 0x080000) ? null : resolveSelectStep;
			w.xSelectCallback2 = null;
			w.u.pNC = pNC;
			w.pParse.nHeight += (int)(pExpr.nHeight);
			if ((sqlite3ExprCheckHeight(w.pParse, (int)(w.pParse.nHeight))) != 0)
			{
				return (int)(1);
			}

			sqlite3WalkExpr(w, pExpr);
			w.pParse.nHeight -= (int)(pExpr.nHeight);
			(pExpr).flags |= (uint)(pNC.ncFlags & (0x000010 | 0x008000));
			pNC.ncFlags |= (int)(savedHasAgg);
			return (((pNC.nNcErr) > (0)) || ((w.pParse.nErr) > (0)) ? 1 : 0);
		}
	}
}