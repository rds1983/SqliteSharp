// Generated by Hebron at 4/3/2022 2:10:11 AM

using System;
using System.Runtime.InteropServices;
using Hebron.Runtime;

namespace SqliteSharp
{
	unsafe partial class Sqlite
	{
		public static void jsonEachComputePath(JsonEachCursor p, JsonString pStr, uint i)
		{
			JsonNode* pNode; 
			JsonNode* pUp;
			uint iUp = 0;
			if ((i) == (0))
			{
				jsonAppendChar(pStr, (sbyte)(36));
				return;
			}

			iUp = (uint)(p.sParse.aUp[i]);
			jsonEachComputePath(p, pStr, (uint)(iUp));
			pNode = &p.sParse.aNode[i];
			pUp = &p.sParse.aNode[iUp];
			if ((pUp->eType) == (6))
			{
				jsonPrintf((int)(30), pStr, "[%d]", (uint)(pUp->u.iKey));
			}
			else
			{
				if ((pNode->jnFlags & 0x40) == (0))
					pNode--;
				jsonPrintf((int)(pNode->n + 1), pStr, ".%.*s", (uint)(pNode->n - 2), pNode->u.zJContent + 1);
			}
		}
		public static void jsonEachCursorReset(JsonEachCursor p)
		{
			sqlite3_free(p.zJson);
			sqlite3_free(p.zRoot);
			jsonParseReset(&p.sParse);
			p.iRowid = (uint)(0);
			p.i = (uint)(0);
			p.iEnd = (uint)(0);
			p.eType = (byte)(0);
			p.zJson = null;
			p.zRoot = null;
		}
	}
}